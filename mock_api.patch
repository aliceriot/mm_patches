diff --git a/static/js/lib/api.js b/static/js/lib/api.js
index d07f1b67..c3ece2aa 100644
--- a/static/js/lib/api.js
+++ b/static/js/lib/api.js
@@ -13,6 +13,12 @@ import type { AvailableProgram, AvailablePrograms } from '../flow/enrollmentType
 import type { EmailSendResponse } from '../flow/emailTypes';
 import type { PearsonSSOParameters } from '../flow/pearsonTypes';
 import { S, parseJSON, filterE } from './sanctuary';
+import {
+  DASHBOARD_RESPONSE,
+  PROGRAMS,
+  COURSE_PRICES_RESPONSE,
+  USER_PROGRAM_RESPONSE,
+} from '../test_constants.js';
 
 export function getCookie(name: string): string|null {
   let cookieValue = null;
@@ -156,15 +162,22 @@ export function patchUserProfile(username: string, profile: Profile): Promise<Pr
 }
 
 export function getDashboard(username: string): Promise<Dashboard> {
-  return fetchJSONWithCSRF(`/api/v0/dashboard/${username}/`, {}, true);
+  // return fetchJSONWithCSRF(`/api/v0/dashboard/${username}/`, {}, true);
+  return Promise.resolve(DASHBOARD_RESPONSE);
 }
 
 export function checkout(courseId: string): Promise<CheckoutResponse> {
-  return fetchJSONWithCSRF('/api/v0/checkout/', {
-    method: 'POST',
-    body: JSON.stringify({
-      course_id: courseId
-    })
+  // return fetchJSONWithCSRF('/api/v0/checkout/', {
+  //   method: 'POST',
+  //   body: JSON.stringify({
+  //     course_id: courseId
+  //   })
+  // });
+
+  return new Promise(resolve => {
+    setTimeout(() => {
+      resolve();
+    }, 1000);
   });
 }
 
@@ -203,7 +216,8 @@ export function sendLearnerMail(subject: string, body: string, studentId: number
 }
 
 export function getPrograms(): Promise<AvailablePrograms> {
-  return fetchJSONWithCSRF('/api/v0/programs/', {}, true);
+  // return fetchJSONWithCSRF('/api/v0/programs/', {}, true);
+  return Promise.resolve(PROGRAMS);
 }
 
 export function addProgramEnrollment(programId: number): Promise<AvailableProgram> {
@@ -233,21 +247,25 @@ export function getPearsonSSO(): Promise<PearsonSSOParameters> {
 }
 
 export function addFinancialAid(income: number, currency: string, programId: number): Promise<*> {
-  return fetchJSONWithCSRF('/api/v0/financial_aid_request/', {
-    method: 'POST',
-    body: JSON.stringify({
-      original_income: income,
-      original_currency: currency,
-      program_id: programId
-    })
+  // return fetchJSONWithCSRF('/api/v0/financial_aid_request/', {
+  //   method: 'POST',
+  //   body: JSON.stringify({
+  //     original_income: income,
+  //     original_currency: currency,
+  //     program_id: programId
+  //   })
+  // });
+  return new Promise(resolve => {
+    setTimeout(resolve, 1000);
   });
 }
 
 export function getCoursePrices(username: string): Promise<CoursePrices> {
-  return fetchJSONWithCSRF(`/api/v0/course_prices/${username}/`).then(coursePrices => {
-    // turn `price` from string into decimal
-    return R.map(R.evolve({price: Decimal}), coursePrices);
-  });
+  // return fetchJSONWithCSRF(`/api/v0/course_prices/${username}/`).then(coursePrices => {
+  //   // turn `price` from string into decimal
+  //   return R.map(R.evolve({price: Decimal}), coursePrices);
+  // });
+  return Promise.resolve(COURSE_PRICES_RESPONSE);
 }
 
 export function skipFinancialAid(programId: number): Promise<*> {
diff --git a/static/js/test_constants.js b/static/js/test_constants.js
index 3041961a..ce3096ce 100644
--- a/static/js/test_constants.js
+++ b/static/js/test_constants.js
@@ -905,8 +905,12 @@ export const DASHBOARD_RESPONSE: Dashboard = deepFreeze({
           "prerequisites": ""
         },
       ],
-      "financial_aid_availability": false,
-      "id": 6
+      "financial_aid_availability": true,
+      "id": 6,
+      "financial_aid_user_info": {
+        "max_possible_cost": 1000,
+        "min_possible_cost": 200,
+      }
     },
     {
       "title": "Paid but not enrolled",
@@ -930,7 +934,7 @@ export const DASHBOARD_RESPONSE: Dashboard = deepFreeze({
           "status": STATUS_PAID_BUT_NOT_ENROLLED
         }]
       }],
-      "financial_aid_availability": true,
+      "financial_aid_availability": false,
       "id": 7
     },
   ]
